/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.UI.Supplier;


import com.Business.Ecosystem;
import com.Business.Enterprise.Enterprise;
import com.Business.Organization.Organization;
import com.Business.Organization.SupplierOrg;
import com.Business.Supplier.Item;
import com.Business.Supplier.Supplier;
import com.Business.UserAccount.UserAccount;
import com.Business.WorkQueue.SupplierWorkReq;
import com.Business.WorkQueue.WorkQueue;
import com.Business.WorkQueue.WorkReq;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author vidhi
 */
public class SupplierDashboard extends javax.swing.JPanel {

    /**
     * Creates new form EventMakerWorkArea
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    private Ecosystem system;
    private Supplier p;
    
    public SupplierDashboard(JPanel userProcessContainer,UserAccount account,Organization organization,Enterprise enterprise,Ecosystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.organization=organization;
        this.enterprise=enterprise;
        this.system=system;
       
          for (Supplier provider : ((SupplierOrg)organization).getProviderList().getProviderList()) {
            if (account.getEmployee().getEmployeeName().equals(provider.getSupplierName())) {
                 p=provider;
            }
        }

        if (p.getWorkQueue() == null) {
            WorkQueue w = new WorkQueue();
            p.setWorkQueue(w);
        }
        populateTableSupply();
//        populateTableCreate();
    }
    //provide the required supplies on request table
    public void populateTableSupply()
    {
        DefaultTableModel model = (DefaultTableModel) tblProvideReq.getModel();
        
        model.setRowCount(0);
        
        
        for (WorkReq work : system.getWorkQueue().getWorkRequestList()){
           if(work instanceof SupplierWorkReq){ 
            Object[] row = new Object[10];
            row[0] = ((SupplierWorkReq) work).getRtype();
            row[1] = ((SupplierWorkReq) work).getReq();
            row[2] = ((SupplierWorkReq) work).getQuantity();
            row[3] = work;
            row[4] = work.getSender();
            
            
            model.addRow(row);
           }
        }
    }
//    //create supply request
//    public void populateTableCreate(){
//        
//            DefaultTableModel model = (DefaultTableModel) tblCreate.getModel();
//        
//            model.setRowCount(0);
//            for(Item item: p.getItemDir().getSupplyList()){
//            Object[] row = new Object[10];
//            row[0] = item.getRequirementType();
//            row[1] = item.getRequirement();
//            row[2] = item.getQuantity();
//            model.addRow(row);
//            }
//            
//    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProvideReq = new javax.swing.JTable();
        btnComplete = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(102, 102, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Supplier Dashboard");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, 0))
        );

        tblProvideReq.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblProvideReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Request Type", "Requirements", "Quantity", "Status", "Source"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblProvideReq);

        btnComplete.setFont(new java.awt.Font("Zapf Dingbats", 0, 18)); // NOI18N
        btnComplete.setForeground(new java.awt.Color(204, 0, 0));
        btnComplete.setText("Mark Complete");
        btnComplete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(212, 212, 212)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1439, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(245, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(825, 825, 825))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(btnComplete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(400, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

   //complete the request
    private void btnCompleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompleteActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProvideReq.getSelectedRow();
     
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "To allocate the account, please choose the row", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {

            JOptionPane.showMessageDialog(null, "You have completed the request successfully");
            SupplierWorkReq pwr = (SupplierWorkReq) tblProvideReq.getValueAt(selectedRow, 3);
            if (pwr.getReciever() != null) {
                pwr.setStatus("Complete");
            }
            
//            SupplierWorkReq pwr = (SupplierWorkReq) tblProvideReq.getValueAt(selectedRow, 3);
//            if (pwr.getReciever() != null) {
//                if (pwr.getStatus().equals("Pending")) {
//
//                    pwr.setStatus("Complete");
//                    JOptionPane.showMessageDialog(null, "You have completed the request successfully");
//                    populateTableSupply();
////                    populateTableCreate();
//
//                } else {
//                    JOptionPane.showMessageDialog(null, "You cannot complete it two times.","Warning",JOptionPane.WARNING_MESSAGE);
//                }
//            } else {
//                JOptionPane.showMessageDialog(null, "Please assign first","Warning",JOptionPane.WARNING_MESSAGE);
//            }     
    }//GEN-LAST:event_btnCompleteActionPerformed
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComplete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblProvideReq;
    // End of variables declaration//GEN-END:variables
}
